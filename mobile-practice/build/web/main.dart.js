// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const scaffold = flutter_sdk.src__material__scaffold;
  const framework = flutter_sdk.src__widgets__framework;
  const recognizer = flutter_sdk.src__gestures__recognizer;
  const alignment = flutter_sdk.src__painting__alignment;
  const binding = flutter_sdk.src__widgets__binding;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const text = flutter_sdk.src__widgets__text;
  const gradient = flutter_sdk.src__painting__gradient;
  const ink_well = flutter_sdk.src__material__ink_well;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const text_style = flutter_sdk.src__painting__text_style;
  const safe_area = flutter_sdk.src__widgets__safe_area;
  const spacer = flutter_sdk.src__widgets__spacer;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const divider = flutter_sdk.src__material__divider;
  const colors = flutter_sdk.src__material__colors;
  const list_tile = flutter_sdk.src__material__list_tile;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const borders = flutter_sdk.src__painting__borders;
  const colors$ = flutter_sdk.src__painting__colors;
  const radio = flutter_sdk.src__material__radio;
  const material_state = flutter_sdk.src__material__material_state;
  const image = flutter_sdk.src__widgets__image;
  const image_resolution = flutter_sdk.src__painting__image_resolution;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var welcome_screen = Object.create(dart.library);
  var constants = Object.create(dart.library);
  var starter_quiz_button = Object.create(dart.library);
  var quiz_screen = Object.create(dart.library);
  var question_model = Object.create(dart.library);
  var question_card = Object.create(dart.library);
  var result_screen = Object.create(dart.library);
  var $toString = dartx.toString;
  var $toUpperCase = dartx.toUpperCase;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $_set = dartx._set;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToQuizScreen: () => (T.BuildContextToQuizScreen = dart.constFn(dart.fnType(quiz_screen.QuizScreen, [framework.BuildContext])))(),
    JSArrayOfQuestion: () => (T.JSArrayOfQuestion = dart.constFn(_interceptors.JSArray$(question_model.Question)))(),
    intN: () => (T.intN = dart.constFn(dart.nullable(core.int)))(),
    ListOfintN: () => (T.ListOfintN = dart.constFn(core.List$(T.intN())))(),
    intToNull: () => (T.intToNull = dart.constFn(dart.fnType(core.Null, [core.int])))(),
    RadioOfint: () => (T.RadioOfint = dart.constFn(radio.Radio$(core.int)))(),
    SetOfMaterialState: () => (T.SetOfMaterialState = dart.constFn(core.Set$(material_state.MaterialState)))(),
    SetOfMaterialStateToColor: () => (T.SetOfMaterialStateToColor = dart.constFn(dart.fnType(ui.Color, [T.SetOfMaterialState()])))(),
    SetOfMaterialStateToMaterialColor: () => (T.SetOfMaterialStateToMaterialColor = dart.constFn(dart.fnType(colors.MaterialColor, [T.SetOfMaterialState()])))(),
    intNTovoid: () => (T.intNTovoid = dart.constFn(dart.fnType(dart.void, [T.intN()])))(),
    BuildContextToResultScreen: () => (T.BuildContextToResultScreen = dart.constFn(dart.fnType(result_screen.ResultScreen, [framework.BuildContext])))(),
    RouteTobool: () => (T.RouteTobool = dart.constFn(dart.fnType(core.bool, [navigator.Route])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [_Enum__name]: "start",
        [_Enum_index]: 1
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: alignment.AlignmentDirectional.prototype,
        [AlignmentDirectional_y]: 0,
        [AlignmentDirectional_start]: 1
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: welcome_screen.WelcomeScreen.prototype,
        [Widget_key]: null
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: scaffold.Scaffold.prototype,
        [Widget_key]: null,
        [Scaffold_restorationId]: null,
        [Scaffold_endDrawerEnableOpenDragGesture]: true,
        [Scaffold_drawerEnableOpenDragGesture]: true,
        [Scaffold_drawerEdgeDragWidth]: null,
        [Scaffold_drawerDragStartBehavior]: C[2] || CT.C2,
        [Scaffold_primary]: true,
        [Scaffold_resizeToAvoidBottomInset]: null,
        [Scaffold_bottomSheet]: null,
        [Scaffold_bottomNavigationBar]: null,
        [Scaffold_backgroundColor]: null,
        [Scaffold_drawerScrimColor]: null,
        [Scaffold_onEndDrawerChanged]: null,
        [Scaffold_endDrawer]: null,
        [Scaffold_onDrawerChanged]: null,
        [Scaffold_drawer]: null,
        [Scaffold_persistentFooterAlignment]: C[3] || CT.C3,
        [Scaffold_persistentFooterButtons]: null,
        [Scaffold_floatingActionButtonAnimator]: null,
        [Scaffold_floatingActionButtonLocation]: null,
        [Scaffold_floatingActionButton]: null,
        [Scaffold_body]: C[4] || CT.C4,
        [Scaffold_appBar]: null,
        [Scaffold_extendBodyBehindAppBar]: false,
        [Scaffold_extendBody]: false
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278389026
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285186649
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293471792
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290888129
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279242768
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282818734
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278255563
      });
    },
    get C12() {
      return C[12] = dart.constList([C[13] || CT.C13, C[14] || CT.C14], ui.Color);
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.TileMode.prototype,
        [_Enum__name]: "clamp",
        [_Enum_index]: 0
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 1
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: -1
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: null,
        [Gradient_colors]: C[12] || CT.C12,
        [LinearGradient_tileMode]: C[15] || CT.C15,
        [LinearGradient_end]: C[16] || CT.C16,
        [LinearGradient_begin]: C[17] || CT.C17
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281152332
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287863741
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: quiz_screen.QuizScreen.prototype,
        [Widget_key]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 30,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 30
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282297005
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[24] || CT.C24,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[18] || CT.C18,
        [TextStyle_inherit]: true
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: spacer.Spacer.prototype,
        [Widget_key]: null,
        [Spacer_flex]: 1
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: true,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57491
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 16,
        [Icon_icon]: C[28] || CT.C28
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: true,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57500
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 16,
        [Icon_icon]: C[30] || CT.C30
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 10,
        [SizedBox_width]: null
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: divider.Divider.prototype,
        [Widget_key]: null,
        [Divider_color]: null,
        [Divider_endIndent]: null,
        [Divider_indent]: null,
        [Divider_thickness]: 2,
        [Divider_height]: null
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 24,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 24,
        [EdgeInsets_left]: 16
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 600,
        [FontWeight_index]: 5
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[35] || CT.C35,
        [TextStyle_fontSize]: 15,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[18] || CT.C18,
        [TextStyle_inherit]: true
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_Enum__name]: "solid",
        [_Enum_index]: 1
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[37] || CT.C37,
        [BorderSide_width]: 2,
        [BorderSide_color]: C[38] || CT.C38
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294638330
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294309365
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293848814
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292927712
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292269782
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290624957
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288585374
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285887861
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284572001
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282532418
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281348144
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280361249
      });
    },
    get C41() {
      return C[41] = dart.constMap(core.int, ui.Color, [50, C[42] || CT.C42, 100, C[43] || CT.C43, 200, C[44] || CT.C44, 300, C[45] || CT.C45, 350, C[46] || CT.C46, 400, C[47] || CT.C47, 500, C[48] || CT.C48, 600, C[49] || CT.C49, 700, C[50] || CT.C50, 800, C[51] || CT.C51, 850, C[52] || CT.C52, 900, C[53] || CT.C53]);
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4288585374,
        [ColorSwatch__swatch]: C[41] || CT.C41
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[24] || CT.C24,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[40] || CT.C40,
        [TextStyle_inherit]: true
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 20
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[24] || CT.C24,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[24] || CT.C24,
        [TextStyle_fontSize]: 32,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[40] || CT.C40,
        [TextStyle_inherit]: true
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[57] || CT.C57,
        [Text_textSpan]: null,
        [Text_data]: "Score"
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 20,
        [SizedBox_width]: null
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 16
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[63] || CT.C63,
        [TextStyle_inherit]: true
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[62] || CT.C62,
        [Text_textSpan]: null,
        [Text_data]: "Try Again"
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: spacer.Spacer.prototype,
        [Widget_key]: null,
        [Spacer_flex]: 3
      });
    }
  }, false);
  var C = Array(65).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:flutter_app/presentation/screens/welcome_screen.dart",
    "package:flutter_app/presentation/widgets/starter_quiz_button.dart",
    "package:flutter_app/presentation/screens/quiz_screen.dart",
    "package:flutter_app/presentation/models/question_model.dart",
    "package:flutter_app/presentation/widgets/question_card.dart",
    "package:flutter_app/presentation/screens/result_screen.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Scaffold_restorationId = dart.privateName(scaffold, "Scaffold.restorationId");
  var Scaffold_endDrawerEnableOpenDragGesture = dart.privateName(scaffold, "Scaffold.endDrawerEnableOpenDragGesture");
  var Scaffold_drawerEnableOpenDragGesture = dart.privateName(scaffold, "Scaffold.drawerEnableOpenDragGesture");
  var Scaffold_drawerEdgeDragWidth = dart.privateName(scaffold, "Scaffold.drawerEdgeDragWidth");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var Scaffold_drawerDragStartBehavior = dart.privateName(scaffold, "Scaffold.drawerDragStartBehavior");
  var Scaffold_primary = dart.privateName(scaffold, "Scaffold.primary");
  var Scaffold_resizeToAvoidBottomInset = dart.privateName(scaffold, "Scaffold.resizeToAvoidBottomInset");
  var Scaffold_bottomSheet = dart.privateName(scaffold, "Scaffold.bottomSheet");
  var Scaffold_bottomNavigationBar = dart.privateName(scaffold, "Scaffold.bottomNavigationBar");
  var Scaffold_backgroundColor = dart.privateName(scaffold, "Scaffold.backgroundColor");
  var Scaffold_drawerScrimColor = dart.privateName(scaffold, "Scaffold.drawerScrimColor");
  var Scaffold_onEndDrawerChanged = dart.privateName(scaffold, "Scaffold.onEndDrawerChanged");
  var Scaffold_endDrawer = dart.privateName(scaffold, "Scaffold.endDrawer");
  var Scaffold_onDrawerChanged = dart.privateName(scaffold, "Scaffold.onDrawerChanged");
  var Scaffold_drawer = dart.privateName(scaffold, "Scaffold.drawer");
  var AlignmentDirectional_y = dart.privateName(alignment, "AlignmentDirectional.y");
  var AlignmentDirectional_start = dart.privateName(alignment, "AlignmentDirectional.start");
  var Scaffold_persistentFooterAlignment = dart.privateName(scaffold, "Scaffold.persistentFooterAlignment");
  var Scaffold_persistentFooterButtons = dart.privateName(scaffold, "Scaffold.persistentFooterButtons");
  var Scaffold_floatingActionButtonAnimator = dart.privateName(scaffold, "Scaffold.floatingActionButtonAnimator");
  var Scaffold_floatingActionButtonLocation = dart.privateName(scaffold, "Scaffold.floatingActionButtonLocation");
  var Scaffold_floatingActionButton = dart.privateName(scaffold, "Scaffold.floatingActionButton");
  var Scaffold_body = dart.privateName(scaffold, "Scaffold.body");
  var Scaffold_appBar = dart.privateName(scaffold, "Scaffold.appBar");
  var Scaffold_extendBodyBehindAppBar = dart.privateName(scaffold, "Scaffold.extendBodyBehindAppBar");
  var Scaffold_extendBody = dart.privateName(scaffold, "Scaffold.extendBody");
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, title: "Quiz App", theme: theme_data.ThemeData.dark(), home: C[1] || CT.C1});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.main = function main$0() {
    binding.runApp(C[5] || CT.C5);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  welcome_screen.WelcomeScreen = class WelcomeScreen extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new welcome_screen.WelcomeScreen.new({key: key});
    }
    build(context) {
      return new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: constants.kSecondaryColor}), child: new basic.Center.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new text.Text.new("Let's Play Quiz"), new starter_quiz_button.StartQuizButton.new()])})})});
    }
  };
  (welcome_screen.WelcomeScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    welcome_screen.WelcomeScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = welcome_screen.WelcomeScreen.prototype;
  dart.addTypeTests(welcome_screen.WelcomeScreen);
  dart.addTypeCaches(welcome_screen.WelcomeScreen);
  dart.setMethodSignature(welcome_screen.WelcomeScreen, () => ({
    __proto__: dart.getMethods(welcome_screen.WelcomeScreen.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(welcome_screen.WelcomeScreen, I[1]);
  var Color_value = dart.privateName(ui, "Color.value");
  var Gradient_transform = dart.privateName(gradient, "Gradient.transform");
  var Gradient_stops = dart.privateName(gradient, "Gradient.stops");
  var Gradient_colors = dart.privateName(gradient, "Gradient.colors");
  var LinearGradient_tileMode = dart.privateName(gradient, "LinearGradient.tileMode");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var LinearGradient_end = dart.privateName(gradient, "LinearGradient.end");
  var LinearGradient_begin = dart.privateName(gradient, "LinearGradient.begin");
  dart.defineLazy(constants, {
    /*constants.kSecondaryColor*/get kSecondaryColor() {
      return C[6] || CT.C6;
    },
    /*constants.kGreenColor*/get kGreenColor() {
      return C[7] || CT.C7;
    },
    /*constants.kRedColor*/get kRedColor() {
      return C[8] || CT.C8;
    },
    /*constants.kGrayColor*/get kGrayColor() {
      return C[9] || CT.C9;
    },
    /*constants.kBlackColor*/get kBlackColor() {
      return C[10] || CT.C10;
    },
    /*constants.kPrimaryGradient*/get kPrimaryGradient() {
      return C[11] || CT.C11;
    },
    /*constants.kDefaultPadding*/get kDefaultPadding() {
      return 20;
    },
    /*constants.kBackgroundColor*/get kBackgroundColor() {
      return C[18] || CT.C18;
    },
    /*constants.kTextColor*/get kTextColor() {
      return C[19] || CT.C19;
    }
  }, false);
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  starter_quiz_button.StartQuizButton = class StartQuizButton extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new starter_quiz_button.StartQuizButton.new({key: key});
    }
    build(context) {
      return new ink_well.InkWell.new({onTap: dart.fn(() => {
          navigator.Navigator.of(context).push(dart.dynamic, new page.MaterialPageRoute.new({builder: dart.fn(context => C[20] || CT.C20, T.BuildContextToQuizScreen())}));
        }, T.VoidTovoid()), child: new container.Container.new({width: 1 / 0, padding: C[21] || CT.C21, decoration: new box_decoration.BoxDecoration.new({color: C[22] || CT.C22, borderRadius: new border_radius.BorderRadius.circular(8)}), child: new basic.Center.new({child: new text.Text.new("Lets start quiz"[$toUpperCase](), {style: C[23] || CT.C23})})})});
    }
  };
  (starter_quiz_button.StartQuizButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    starter_quiz_button.StartQuizButton.__proto__.new.call(this, {key: key});
    ;
  }).prototype = starter_quiz_button.StartQuizButton.prototype;
  dart.addTypeTests(starter_quiz_button.StartQuizButton);
  dart.addTypeCaches(starter_quiz_button.StartQuizButton);
  dart.setMethodSignature(starter_quiz_button.StartQuizButton, () => ({
    __proto__: dart.getMethods(starter_quiz_button.StartQuizButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(starter_quiz_button.StartQuizButton, I[2]);
  quiz_screen.QuizScreen = class QuizScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new quiz_screen.QuizScreen.new({key: key});
    }
    createState() {
      return new quiz_screen._QuizScreenState.new();
    }
  };
  (quiz_screen.QuizScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    quiz_screen.QuizScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = quiz_screen.QuizScreen.prototype;
  dart.addTypeTests(quiz_screen.QuizScreen);
  dart.addTypeCaches(quiz_screen.QuizScreen);
  dart.setMethodSignature(quiz_screen.QuizScreen, () => ({
    __proto__: dart.getMethods(quiz_screen.QuizScreen.__proto__),
    createState: dart.fnType(framework.State$(quiz_screen.QuizScreen), [])
  }));
  dart.setLibraryUri(quiz_screen.QuizScreen, I[3]);
  var Spacer_flex = dart.privateName(spacer, "Spacer.flex");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var Divider_color = dart.privateName(divider, "Divider.color");
  var Divider_endIndent = dart.privateName(divider, "Divider.endIndent");
  var Divider_indent = dart.privateName(divider, "Divider.indent");
  var Divider_thickness = dart.privateName(divider, "Divider.thickness");
  var Divider_height = dart.privateName(divider, "Divider.height");
  quiz_screen._QuizScreenState = class _QuizScreenState extends framework.State$(quiz_screen.QuizScreen) {
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: constants.kBackgroundColor, body: new safe_area.SafeArea.new({child: new basic.Padding.new({padding: C[25] || CT.C25, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new basic.Row.new({children: T.JSArrayOfWidget().of([new text.Text.new("Question " + dart.str(this.index + 1) + "/4", {style: new text_style.TextStyle.new({color: constants.kTextColor, fontSize: 22, fontWeight: ui.FontWeight.bold})}), C[26] || CT.C26, new icon_button.IconButton.new({onPressed: this.index < 1 ? null : dart.fn(() => {
                        this.setState(dart.fn(() => {
                          this.index = this.index - 1;
                        }, T.VoidTovoid()));
                      }, T.VoidTovoid()), icon: C[27] || CT.C27}), new text.Text.new(dart.str(this.index + 1) + "/4", {style: new text_style.TextStyle.new({fontSize: 18, fontWeight: ui.FontWeight.bold})}), new icon_button.IconButton.new({onPressed: this.index === this.questions[$length] - 1 ? null : dart.fn(() => {
                        this.setState(dart.fn(() => {
                          this.index = this.index + 1;
                        }, T.VoidTovoid()));
                      }, T.VoidTovoid()), icon: C[29] || CT.C29})])}), C[31] || CT.C31, C[32] || CT.C32, C[31] || CT.C31, new question_card.QuestionCard.new({question: this.questions[$_get](this.index), index: this.index, questionLength: this.questions[$length]})])})})})});
    }
    static ['_#new#tearOff']() {
      return new quiz_screen._QuizScreenState.new();
    }
  };
  (quiz_screen._QuizScreenState.new = function() {
    this.index = 0;
    this.questions = question_model.sample_data;
    quiz_screen._QuizScreenState.__proto__.new.call(this);
    ;
  }).prototype = quiz_screen._QuizScreenState.prototype;
  dart.addTypeTests(quiz_screen._QuizScreenState);
  dart.addTypeCaches(quiz_screen._QuizScreenState);
  dart.setMethodSignature(quiz_screen._QuizScreenState, () => ({
    __proto__: dart.getMethods(quiz_screen._QuizScreenState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(quiz_screen._QuizScreenState, I[3]);
  dart.setFieldSignature(quiz_screen._QuizScreenState, () => ({
    __proto__: dart.getFields(quiz_screen._QuizScreenState.__proto__),
    index: dart.fieldType(core.int),
    questions: dart.finalFieldType(core.List$(question_model.Question))
  }));
  var id$ = dart.privateName(question_model, "Question.id");
  var answer$ = dart.privateName(question_model, "Question.answer");
  var question$ = dart.privateName(question_model, "Question.question");
  var options$ = dart.privateName(question_model, "Question.options");
  question_model.Question = class Question extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get answer() {
      return this[answer$];
    }
    set answer(value) {
      super.answer = value;
    }
    get question() {
      return this[question$];
    }
    set question(value) {
      super.question = value;
    }
    get options() {
      return this[options$];
    }
    set options(value) {
      super.options = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let question = opts && 'question' in opts ? opts.question : null;
      let answer = opts && 'answer' in opts ? opts.answer : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return new question_model.Question.new({id: id, question: question, answer: answer, options: options});
    }
  };
  (question_model.Question.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let question = opts && 'question' in opts ? opts.question : null;
    let answer = opts && 'answer' in opts ? opts.answer : null;
    let options = opts && 'options' in opts ? opts.options : null;
    this[id$] = id;
    this[question$] = question;
    this[answer$] = answer;
    this[options$] = options;
    ;
  }).prototype = question_model.Question.prototype;
  dart.addTypeTests(question_model.Question);
  dart.addTypeCaches(question_model.Question);
  dart.setLibraryUri(question_model.Question, I[4]);
  dart.setFieldSignature(question_model.Question, () => ({
    __proto__: dart.getFields(question_model.Question.__proto__),
    id: dart.finalFieldType(core.int),
    answer: dart.finalFieldType(core.int),
    question: dart.finalFieldType(core.String),
    options: dart.finalFieldType(core.List$(core.String))
  }));
  dart.defineLazy(question_model, {
    /*question_model.sample_data*/get sample_data() {
      return T.JSArrayOfQuestion().of([new question_model.Question.new({id: 1, question: "Flutter is an open-source UI software development kit created by ______", answer: 1, options: T.JSArrayOfString().of(["Apple", "Google", "Facebook", "Microsoft"])}), new question_model.Question.new({id: 2, question: "When google release Flutter.", answer: 2, options: T.JSArrayOfString().of(["Jun 2017", "Jun 2017", "May 2017", "May 2018"])}), new question_model.Question.new({id: 3, question: "A memory location that holds a single letter or number.", answer: 2, options: T.JSArrayOfString().of(["Double", "Int", "Char", "Word"])}), new question_model.Question.new({id: 4, question: "What command do you use to output data to the screen?", answer: 2, options: T.JSArrayOfString().of(["Cin", "Count>>", "Cout", "Output>>"])})]);
    },
    set sample_data(value) {}
  }, false);
  var question$0 = dart.privateName(question_card, "QuestionCard.question");
  var index$ = dart.privateName(question_card, "QuestionCard.index");
  var questionLength$ = dart.privateName(question_card, "QuestionCard.questionLength");
  question_card.QuestionCard = class QuestionCard extends framework.StatefulWidget {
    get question() {
      return this[question$0];
    }
    set question(value) {
      super.question = value;
    }
    get index() {
      return this[index$];
    }
    set index(value) {
      super.index = value;
    }
    get questionLength() {
      return this[questionLength$];
    }
    set questionLength(value) {
      super.questionLength = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let question = opts && 'question' in opts ? opts.question : null;
      let index = opts && 'index' in opts ? opts.index : null;
      let questionLength = opts && 'questionLength' in opts ? opts.questionLength : null;
      return new question_card.QuestionCard.new({key: key, question: question, index: index, questionLength: questionLength});
    }
    createState() {
      return new question_card._QuestionCardState.new();
    }
  };
  (question_card.QuestionCard.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let question = opts && 'question' in opts ? opts.question : null;
    let index = opts && 'index' in opts ? opts.index : null;
    let questionLength = opts && 'questionLength' in opts ? opts.questionLength : null;
    this[question$0] = question;
    this[index$] = index;
    this[questionLength$] = questionLength;
    question_card.QuestionCard.__proto__.new.call(this, {key: key});
    ;
  }).prototype = question_card.QuestionCard.prototype;
  dart.addTypeTests(question_card.QuestionCard);
  dart.addTypeCaches(question_card.QuestionCard);
  dart.setMethodSignature(question_card.QuestionCard, () => ({
    __proto__: dart.getMethods(question_card.QuestionCard.__proto__),
    createState: dart.fnType(framework.State$(question_card.QuestionCard), [])
  }));
  dart.setLibraryUri(question_card.QuestionCard, I[5]);
  dart.setFieldSignature(question_card.QuestionCard, () => ({
    __proto__: dart.getFields(question_card.QuestionCard.__proto__),
    question: dart.finalFieldType(question_model.Question),
    index: dart.finalFieldType(core.int),
    questionLength: dart.finalFieldType(core.int)
  }));
  var ___QuestionCardState_choiceAnswer = dart.privateName(question_card, "_#_QuestionCardState#choiceAnswer");
  var BorderSide_strokeAlign = dart.privateName(borders, "BorderSide.strokeAlign");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  question_card._QuestionCardState = class _QuestionCardState extends framework.State$(question_card.QuestionCard) {
    get choiceAnswer() {
      let t0;
      t0 = this[___QuestionCardState_choiceAnswer];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("choiceAnswer")) : t0;
    }
    set choiceAnswer(choiceAnswer$35param) {
      this[___QuestionCardState_choiceAnswer] = choiceAnswer$35param;
    }
    initState() {
      super.initState();
      this.choiceAnswer = T.ListOfintN().generate(this.widget.questionLength, dart.fn(index => null, T.intToNull()));
    }
    build(context) {
      return new basic.Expanded.new({child: new container.Container.new({padding: C[33] || CT.C33, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white, borderRadius: new border_radius.BorderRadius.circular(10)}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(this.widget.question.question, {style: C[34] || CT.C34}), C[31] || CT.C31, new list_tile.ListTile.new({onTap: dart.fn(() => {
                  this.setState(dart.fn(() => {
                    this.choiceAnswer[$_set](this.widget.index, 0);
                  }, T.VoidTovoid()));
                }, T.VoidTovoid()), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({side: C[36] || CT.C36, borderRadius: new border_radius.BorderRadius.circular(16)}), title: new text.Text.new("A. " + this.widget.question.options[$_get](0), {style: C[39] || CT.C39}), trailing: new (T.RadioOfint()).new({fillColor: material_state.MaterialStateColor.resolveWith(dart.fn(states => dart.nullCheck(colors.Colors.grey._get(400)), T.SetOfMaterialStateToColor())), focusColor: material_state.MaterialStateColor.resolveWith(dart.fn(states => colors.Colors.green, T.SetOfMaterialStateToMaterialColor())), value: 0, groupValue: this.choiceAnswer[$_get](this.widget.index), onChanged: dart.fn(value => {
                    let t0;
                    this.choiceAnswer[$_set](this.widget.index, (t0 = value, t0 == null ? 0 : t0));
                  }, T.intNTovoid())})}), C[31] || CT.C31, new list_tile.ListTile.new({onTap: dart.fn(() => {
                  this.setState(dart.fn(() => {
                    this.choiceAnswer[$_set](this.widget.index, 1);
                  }, T.VoidTovoid()));
                }, T.VoidTovoid()), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({side: C[36] || CT.C36, borderRadius: new border_radius.BorderRadius.circular(16)}), title: new text.Text.new("B. " + this.widget.question.options[$_get](1), {style: C[39] || CT.C39}), trailing: new (T.RadioOfint()).new({fillColor: material_state.MaterialStateColor.resolveWith(dart.fn(states => dart.nullCheck(colors.Colors.grey._get(400)), T.SetOfMaterialStateToColor())), value: 1, groupValue: this.choiceAnswer[$_get](this.widget.index), onChanged: dart.fn(value => {
                    let t0;
                    this.choiceAnswer[$_set](this.widget.index, (t0 = value, t0 == null ? 1 : t0));
                  }, T.intNTovoid())})}), C[31] || CT.C31, new list_tile.ListTile.new({onTap: dart.fn(() => {
                  this.setState(dart.fn(() => {
                    this.choiceAnswer[$_set](this.widget.index, 2);
                  }, T.VoidTovoid()));
                }, T.VoidTovoid()), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({side: C[36] || CT.C36, borderRadius: new border_radius.BorderRadius.circular(16)}), title: new text.Text.new("C. " + this.widget.question.options[$_get](2), {style: C[39] || CT.C39}), trailing: new (T.RadioOfint()).new({fillColor: material_state.MaterialStateColor.resolveWith(dart.fn(states => dart.nullCheck(colors.Colors.grey._get(400)), T.SetOfMaterialStateToColor())), value: 2, groupValue: this.choiceAnswer[$_get](this.widget.index), onChanged: dart.fn(value => {
                    let t0;
                    this.choiceAnswer[$_set](this.widget.index, (t0 = value, t0 == null ? 2 : t0));
                  }, T.intNTovoid())})}), C[31] || CT.C31, new list_tile.ListTile.new({onTap: dart.fn(() => {
                  this.setState(dart.fn(() => {
                    this.choiceAnswer[$_set](this.widget.index, 3);
                  }, T.VoidTovoid()));
                }, T.VoidTovoid()), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({side: C[36] || CT.C36, borderRadius: new border_radius.BorderRadius.circular(16)}), title: new text.Text.new("D. " + this.widget.question.options[$_get](3), {style: C[39] || CT.C39}), trailing: new (T.RadioOfint()).new({activeColor: constants.kBackgroundColor, fillColor: material_state.MaterialStateColor.resolveWith(dart.fn(states => dart.nullCheck(colors.Colors.grey._get(400)), T.SetOfMaterialStateToColor())), value: 3, groupValue: this.choiceAnswer[$_get](this.widget.index), onChanged: dart.fn(value => {
                    let t0;
                    this.choiceAnswer[$_set](this.widget.index, (t0 = value, t0 == null ? 3 : t0));
                  }, T.intNTovoid())})}), C[26] || CT.C26, this.widget.index === this.widget.questionLength - 1 ? new basic.Align.new({alignment: alignment.Alignment.center, child: new ink_well.InkWell.new({onTap: dart.fn(() => {
                    let score = this.calculateScore(this.choiceAnswer);
                    navigator.Navigator.of(context).push(dart.dynamic, new page.MaterialPageRoute.new({builder: dart.fn(context => new result_screen.ResultScreen.new({totalScore: 4, actualScore: score}), T.BuildContextToResultScreen())}));
                  }, T.VoidTovoid()), child: new container.Container.new({padding: C[54] || CT.C54, decoration: new box_decoration.BoxDecoration.new({color: constants.kBackgroundColor, borderRadius: new border_radius.BorderRadius.circular(8)}), child: new text.Text.new("Submit"[$toUpperCase](), {style: C[55] || CT.C55})})})}) : new container.Container.new()])})})});
    }
    calculateScore(answers) {
      let score = 0;
      for (let i = 0; i < question_model.sample_data[$length]; i = i + 1) {
        if (question_model.sample_data[$_get](i).answer === answers[$_get](i)) {
          score = score + 1;
        }
      }
      return score;
    }
    static ['_#new#tearOff']() {
      return new question_card._QuestionCardState.new();
    }
  };
  (question_card._QuestionCardState.new = function() {
    this[___QuestionCardState_choiceAnswer] = null;
    question_card._QuestionCardState.__proto__.new.call(this);
    ;
  }).prototype = question_card._QuestionCardState.prototype;
  dart.addTypeTests(question_card._QuestionCardState);
  dart.addTypeCaches(question_card._QuestionCardState);
  dart.setMethodSignature(question_card._QuestionCardState, () => ({
    __proto__: dart.getMethods(question_card._QuestionCardState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    calculateScore: dart.fnType(core.int, [core.List$(dart.nullable(core.int))])
  }));
  dart.setGetterSignature(question_card._QuestionCardState, () => ({
    __proto__: dart.getGetters(question_card._QuestionCardState.__proto__),
    choiceAnswer: core.List$(dart.nullable(core.int))
  }));
  dart.setSetterSignature(question_card._QuestionCardState, () => ({
    __proto__: dart.getSetters(question_card._QuestionCardState.__proto__),
    choiceAnswer: core.List$(dart.nullable(core.int))
  }));
  dart.setLibraryUri(question_card._QuestionCardState, I[5]);
  dart.setFieldSignature(question_card._QuestionCardState, () => ({
    __proto__: dart.getFields(question_card._QuestionCardState.__proto__),
    [___QuestionCardState_choiceAnswer]: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.int))))
  }));
  var totalScore$ = dart.privateName(result_screen, "ResultScreen.totalScore");
  var actualScore$ = dart.privateName(result_screen, "ResultScreen.actualScore");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  result_screen.ResultScreen = class ResultScreen extends framework.StatelessWidget {
    get totalScore() {
      return this[totalScore$];
    }
    set totalScore(value) {
      super.totalScore = value;
    }
    get actualScore() {
      return this[actualScore$];
    }
    set actualScore(value) {
      super.actualScore = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let totalScore = opts && 'totalScore' in opts ? opts.totalScore : null;
      let actualScore = opts && 'actualScore' in opts ? opts.actualScore : null;
      return new result_screen.ResultScreen.new({key: key, totalScore: totalScore, actualScore: actualScore});
    }
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: constants.kBackgroundColor, body: new safe_area.SafeArea.new({child: new basic.Center.new({child: new basic.Column.new({children: T.JSArrayOfWidget().of([C[26] || CT.C26, new image.Image.new({image: new image_resolution.AssetImage.new("assets/images/a2sv.png")}), C[56] || CT.C56, C[58] || CT.C58, new text.Text.new(dart.str(this.actualScore) + "/" + dart.str(this.totalScore), {style: new text_style.TextStyle.new({color: colors.Colors.white, fontSize: 24})}), C[59] || CT.C59, new ink_well.InkWell.new({onTap: dart.fn(() => {
                    navigator.Navigator.of(context).popUntil(dart.fn(route => route.isFirst, T.RouteTobool()));
                  }, T.VoidTovoid()), child: new container.Container.new({padding: C[60] || CT.C60, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.blueGrey, borderRadius: new border_radius.BorderRadius.circular(8)}), child: C[61] || CT.C61})}), C[64] || CT.C64])})})})});
    }
  };
  (result_screen.ResultScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let totalScore = opts && 'totalScore' in opts ? opts.totalScore : null;
    let actualScore = opts && 'actualScore' in opts ? opts.actualScore : null;
    this[totalScore$] = totalScore;
    this[actualScore$] = actualScore;
    result_screen.ResultScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = result_screen.ResultScreen.prototype;
  dart.addTypeTests(result_screen.ResultScreen);
  dart.addTypeCaches(result_screen.ResultScreen);
  dart.setMethodSignature(result_screen.ResultScreen, () => ({
    __proto__: dart.getMethods(result_screen.ResultScreen.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(result_screen.ResultScreen, I[6]);
  dart.setFieldSignature(result_screen.ResultScreen, () => ({
    __proto__: dart.getFields(result_screen.ResultScreen.__proto__),
    totalScore: dart.finalFieldType(core.int),
    actualScore: dart.finalFieldType(core.int)
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/presentation/screens/welcome_screen.dart": welcome_screen,
    "package:flutter_app/constants.dart": constants,
    "package:flutter_app/presentation/widgets/starter_quiz_button.dart": starter_quiz_button,
    "package:flutter_app/presentation/screens/quiz_screen.dart": quiz_screen,
    "package:flutter_app/presentation/models/question_model.dart": question_model,
    "package:flutter_app/presentation/widgets/question_card.dart": question_card,
    "package:flutter_app/presentation/screens/result_screen.dart": result_screen
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/presentation/screens/welcome_screen.dart","/zapp/project/lib/constants.dart","/zapp/project/lib/presentation/widgets/starter_quiz_button.dart","/zapp/project/lib/presentation/screens/quiz_screen.dart","/zapp/project/lib/presentation/models/question_model.dart","/zapp/project/lib/presentation/widgets/question_card.dart","/zapp/project/lib/presentation/screens/result_screen.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    presentation__screens__welcome_screen: welcome_screen,
    constants: constants,
    presentation__widgets__starter_quiz_button: starter_quiz_button,
    presentation__screens__quiz_screen: quiz_screen,
    presentation__models__question_model: question_model,
    presentation__widgets__question_card: question_card,
    presentation__screens__result_screen: result_screen
  };
}));

//# sourceMappingURL=main.js.map
